trigger:
- master
pool:
  vmImage: 'ubuntu-latest'
variables:
  buildConfiguration: 'Release'
  version.Major: '1'
  version.Minor: '0'
  version.MajorMinor: '$(version.Major).$(version.Minor)'
  version.Patch: $[counter(variables['version.MajorMinor'], 0)]
  version.Full: '$(version.Major).$(version.Minor).$(version.Patch)'

stages:
  - stage: Build
    jobs:
      - job: BuildLibrary
        displayName: 'Build Library'
        continueOnError: false
        workspace:
          clean: all
        steps:
          - task: DotNetCoreCLI@2
            inputs:
              command: build
              projects: '**/*.sln'
              arguments: '--configuration $(BuildConfiguration) /p:Version=$(version.Full)'
          - task: DotNetCoreCLI@2
            displayName: 'dotnet pack $(buildConfiguration)'
            inputs:
                command: pack
                majorVersion: '$(version.Major)'
                minorVersion: '$(version.Minor)'
                patchVersion: '$(version.Patch)'
          - task: NuGetAuthenticate@0
            displayName: 'NuGet Authenticate'
          - task: NuGetCommand@2
            displayName: 'NuGet push'
            inputs:
              command: push
              publishVstsFeed: 'Common/CMCS.Common'
              allowPackageConflicts: true